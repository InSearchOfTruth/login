{"ast":null,"code":"import _classCallCheck from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport LoginPage from './components/loginPage';\nimport RegisterPage from './components/registerPage';\nimport { PrivateRoute } from './components/privateRoute';\nimport User from './components/user';\nvar ConnectyCube = window.ConnectyCube;\nvar history = createBrowserHistory();\nvar CREDENTIALS = {\n  appId: 629,\n  authKey: 'gy9ARS4acJh9DHb',\n  authSecret: 'YfQFkHu3h9WtdPw'\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.isAuthorized = function () {\n      _this.setState({\n        authorized: true\n      });\n    };\n\n    _this.state = {\n      authorized: false,\n      session: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ConnectyCube.init(CREDENTIALS);\n\n      if (localStorage.getItem('user')) {\n        var userCredentials = {\n          login: 'marvin11',\n          password: 'supersecurepwd'\n        };\n        var cont = this;\n        ConnectyCube.createSession(userCredentials, function (error, session) {\n          if (error) {\n            cont.setState({\n              authorized: false\n            });\n          } else {\n            cont.setState({\n              authorized: true\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Router, {\n        history: history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/\",\n        component: User,\n        authorized: this.state.authorized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(LoginPage, {\n            authorized: _this2.state.authorized,\n            isAuthorized: _this2.isAuthorized,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/register\",\n        render: function render() {\n          return React.createElement(RegisterPage, {\n            authorized: _this2.state.authorized,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\practics\\ConnectyCube\\test\\src\\App.js"],"names":["React","Component","Router","Route","createBrowserHistory","LoginPage","RegisterPage","PrivateRoute","User","ConnectyCube","window","history","CREDENTIALS","appId","authKey","authSecret","App","props","isAuthorized","setState","authorized","state","session","init","localStorage","getItem","userCredentials","login","password","cont","createSession","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,IAAMC,YAAY,GAAGC,MAAM,CAACD,YAA5B;AAEA,IAAME,OAAO,GAAGP,oBAAoB,EAApC;AAEA,IAAMQ,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,GADW;AAElBC,EAAAA,OAAO,EAAE,iBAFS;AAGlBC,EAAAA,UAAU,EAAE;AAHM,CAApB;;IAMMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UA0BnBC,YA1BmB,GA0BL,YAAK;AACjB,YAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KA9BkB;;AAGjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,KADD;AAEXE,MAAAA,OAAO,EAAE;AAFE,KAAb;AAHiB;AAOpB;;;;wCACkB;AACjBb,MAAAA,YAAY,CAACc,IAAb,CAAkBX,WAAlB;;AACA,UAAGY,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC9B,YAAIC,eAAe,GAAG;AAACC,UAAAA,KAAK,EAAE,UAAR;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SAAtB;AACA,YAAIC,IAAI,GAAG,IAAX;AACApB,QAAAA,YAAY,CAACqB,aAAb,CAA2BJ,eAA3B,EAA4C,UAASK,KAAT,EAAgBT,OAAhB,EAAyB;AACnE,cAAGS,KAAH,EAAS;AACPF,YAAAA,IAAI,CAACV,QAAL,CAAc;AACZC,cAAAA,UAAU,EAAE;AADA,aAAd;AAGD,WAJD,MAIK;AACHS,YAAAA,IAAI,CAACV,QAAL,CAAc;AACZC,cAAAA,UAAU,EAAE;AADA,aAAd;AAGD;AACF,SAVD;AAWD;AACF;;;6BAMU;AAAA;;AACP,aACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAET,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAoB,QAAA,IAAI,EAAC,GAAzB;AAA6B,QAAA,SAAS,EAAEH,IAAxC;AAA8C,QAAA,UAAU,EAAE,KAAKa,KAAL,CAAWD,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAE;AAAA,iBAAI,oBAAC,SAAD;AAAW,YAAA,UAAU,EAAE,MAAI,CAACC,KAAL,CAAWD,UAAlC;AAA8C,YAAA,YAAY,EAAE,MAAI,CAACF,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,MAAM,EAAE;AAAA,iBAAI,oBAAC,YAAD;AAAc,YAAA,UAAU,EAAE,MAAI,CAACG,KAAL,CAAWD,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADJ,CADF;AASD;;;;EA1CenB,S;;AA6ClB,eAAee,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport LoginPage from './components/loginPage'\nimport RegisterPage from './components/registerPage'\nimport {PrivateRoute} from './components/privateRoute'\nimport User from './components/user'\n\nconst ConnectyCube = window.ConnectyCube\n\nconst history = createBrowserHistory();\n\nconst CREDENTIALS = {\n  appId: 629,\n  authKey: 'gy9ARS4acJh9DHb',\n  authSecret: 'YfQFkHu3h9WtdPw'\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authorized: false,\n      session: {}\n  };\n}\ncomponentDidMount(){\n  ConnectyCube.init(CREDENTIALS);\n  if(localStorage.getItem('user')){\n    let userCredentials = {login: 'marvin11', password: 'supersecurepwd'};\n    let cont = this\n    ConnectyCube.createSession(userCredentials, function(error, session) {\n      if(error){\n        cont.setState({\n          authorized: false\n        })\n      }else{\n        cont.setState({\n          authorized: true\n        })\n      }\n    });\n  }\n}\n  isAuthorized= () =>{\n    this.setState({\n      authorized: true\n    })\n  }\n  render() {\n    return (\n      <Router history={history}>\n          <div>\n            <PrivateRoute exact path=\"/\" component={User} authorized={this.state.authorized}/>\n            <Route path=\"/login\" render={()=><LoginPage authorized={this.state.authorized} isAuthorized={this.isAuthorized}/>}  />\n            <Route path=\"/register\" render={()=><RegisterPage authorized={this.state.authorized}/>}/>\n          </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}