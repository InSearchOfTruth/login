{"ast":null,"code":"var config = {\n  version: '1.7.2',\n  creds: {\n    appId: '',\n    authKey: '',\n    authSecret: ''\n  },\n  endpoints: {\n    api: 'api.connectycube.com',\n    chat: 'chat.connectycube.com',\n    muc: 'muc.chat.connectycube.com'\n  },\n  hash: 'sha1',\n  chatProtocol: {\n    bosh: 'https://chat.connectycube.com:5281',\n    websocket: 'wss://chat.connectycube.com:5291',\n    active: 2\n  },\n  webSession: {\n    getSessionTimeInterval: 3,\n    getSessionTimeout: 120\n  },\n  chat: {\n    contactList: {\n      subscriptionMode: {\n        mutual: true\n      }\n    },\n    reconnectionTimeInterval: 5,\n    streamManagement: {\n      enable: false\n    }\n  },\n  videochat: {\n    answerTimeInterval: 60,\n    dialingTimeInterval: 5,\n    disconnectTimeInterval: 30,\n    statsReportTimeInterval: false,\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }, {\n      urls: 'stun:turn.connectycube.com'\n    }, {\n      urls: 'turn:turn.connectycube.com:5349?transport=udp',\n      username: 'connectycube',\n      credential: '4c29501ca9207b7fb9c4b4b6b04faeb1'\n    }, {\n      urls: 'turn:turn.connectycube.com:5349?transport=tcp',\n      username: 'connectycube',\n      credential: '4c29501ca9207b7fb9c4b4b6b04faeb1'\n    }]\n  },\n  urls: {\n    session: 'session',\n    webSession: 'session/web',\n    login: 'login',\n    users: 'users',\n    chat: 'chat',\n    blobs: 'blobs',\n    subscriptions: 'subscriptions',\n    events: 'events',\n    data: 'data',\n    addressbook: 'address_book',\n    addressbookRegistered: 'address_book/registered_users',\n    type: '.json'\n  },\n  on: {\n    sessionExpired: null\n  },\n  timeout: null,\n  debug: {\n    mode: 0\n  }\n};\n\nconfig.set = function (options) {\n  if (typeof options.endpoints === 'object' && options.endpoints.chat) {\n    config.endpoints.muc = 'muc.' + options.endpoints.chat;\n    config.chatProtocol.bosh = 'https://' + options.endpoints.chat + ':5281';\n    config.chatProtocol.websocket = 'wss://' + options.endpoints.chat + ':5291';\n  }\n\n  Object.keys(options).forEach(function (key) {\n    if (key !== 'set' && config.hasOwnProperty(key)) {\n      if (typeof options[key] !== 'object') {\n        config[key] = options[key];\n      } else {\n        Object.keys(options[key]).forEach(function (nextkey) {\n          if (config[key].hasOwnProperty(nextkey)) {\n            config[key][nextkey] = options[key][nextkey];\n          }\n        });\n      }\n    }\n  });\n};\n\nmodule.exports = config;","map":null,"metadata":{},"sourceType":"script"}