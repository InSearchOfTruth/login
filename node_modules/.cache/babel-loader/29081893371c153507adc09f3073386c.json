{"ast":null,"code":"'use strict';\n\nvar inherits = require('inherits');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar unescapeXML = require('../escape').unescapeXML;\n\nvar STATE_TEXT = 0;\nvar STATE_IGNORE_COMMENT = 1;\nvar STATE_IGNORE_INSTRUCTION = 2;\nvar STATE_TAG_NAME = 3;\nvar STATE_TAG = 4;\nvar STATE_ATTR_NAME = 5;\nvar STATE_ATTR_EQ = 6;\nvar STATE_ATTR_QUOT = 7;\nvar STATE_ATTR_VALUE = 8;\nvar STATE_CDATA = 9;\n\nvar SaxLtx = module.exports = function SaxLtx() {\n  EventEmitter.call(this);\n  var state = STATE_TEXT;\n  var remainder;\n  var tagName;\n  var attrs;\n  var endTag;\n  var selfClosing;\n  var attrQuote;\n  var attrQuoteChar;\n  var recordStart = 0;\n  var attrName;\n\n  this._handleTagOpening = function (endTag, tagName, attrs) {\n    if (!endTag) {\n      this.emit('startElement', tagName, attrs);\n\n      if (selfClosing) {\n        this.emit('endElement', tagName);\n      }\n    } else {\n      this.emit('endElement', tagName);\n    }\n  };\n\n  this.write = function (data) {\n    if (typeof data !== 'string') {\n      data = data.toString();\n    }\n\n    var pos = 0;\n    /* Anything from previous write()? */\n\n    if (remainder) {\n      data = remainder + data;\n      pos += remainder.length;\n      remainder = null;\n    }\n\n    function endRecording() {\n      if (typeof recordStart === 'number') {\n        var recorded = data.substring(recordStart, pos);\n        recordStart = undefined;\n        return recorded;\n      }\n    }\n\n    for (; pos < data.length; pos++) {\n      if (state === STATE_TEXT) {\n        // if we're looping through text, fast-forward using indexOf to\n        // the next '<' character\n        var lt = data.indexOf('<', pos);\n\n        if (lt !== -1 && pos !== lt) {\n          pos = lt;\n        }\n      } else if (state === STATE_ATTR_VALUE) {\n        // if we're looping through an attribute, fast-forward using\n        // indexOf to the next end quote character\n        var quot = data.indexOf(attrQuoteChar, pos);\n\n        if (quot !== -1) {\n          pos = quot;\n        }\n      } else if (state === STATE_IGNORE_COMMENT) {\n        // if we're looping through a comment, fast-forward using\n        // indexOf to the first end-comment character\n        var endcomment = data.indexOf('-->', pos);\n\n        if (endcomment !== -1) {\n          pos = endcomment + 2; // target the '>' character\n        }\n      }\n\n      var c = data.charCodeAt(pos);\n\n      switch (state) {\n        case STATE_TEXT:\n          if (c === 60\n          /* < */\n          ) {\n              var text = endRecording();\n\n              if (text) {\n                this.emit('text', unescapeXML(text));\n              }\n\n              state = STATE_TAG_NAME;\n              recordStart = pos + 1;\n              attrs = {};\n            }\n\n          break;\n\n        case STATE_CDATA:\n          if (c === 93\n          /* ] */\n          && data.substr(pos + 1, 2) === ']>') {\n            var cData = endRecording();\n\n            if (cData) {\n              this.emit('text', cData);\n            }\n\n            state = STATE_IGNORE_COMMENT;\n          }\n\n          break;\n\n        case STATE_TAG_NAME:\n          if (c === 47\n          /* / */\n          && recordStart === pos) {\n            recordStart = pos + 1;\n            endTag = true;\n          } else if (c === 33\n          /* ! */\n          ) {\n              if (data.substr(pos + 1, 7) === '[CDATA[') {\n                recordStart = pos + 8;\n                state = STATE_CDATA;\n              } else {\n                recordStart = undefined;\n                state = STATE_IGNORE_COMMENT;\n              }\n            } else if (c === 63\n          /* ? */\n          ) {\n              recordStart = undefined;\n              state = STATE_IGNORE_INSTRUCTION;\n            } else if (c <= 32 || c === 47\n          /* / */\n          || c === 62\n          /* > */\n          ) {\n              tagName = endRecording();\n              pos--;\n              state = STATE_TAG;\n            }\n\n          break;\n\n        case STATE_IGNORE_COMMENT:\n          if (c === 62\n          /* > */\n          ) {\n              var prevFirst = data.charCodeAt(pos - 1);\n              var prevSecond = data.charCodeAt(pos - 2);\n\n              if (prevFirst === 45\n              /* - */\n              && prevSecond === 45\n              /* - */\n              || prevFirst === 93\n              /* ] */\n              && prevSecond === 93\n              /* ] */\n              ) {\n                state = STATE_TEXT;\n              }\n            }\n\n          break;\n\n        case STATE_IGNORE_INSTRUCTION:\n          if (c === 62\n          /* > */\n          ) {\n              var prev = data.charCodeAt(pos - 1);\n\n              if (prev === 63\n              /* ? */\n              ) {\n                  state = STATE_TEXT;\n                }\n            }\n\n          break;\n\n        case STATE_TAG:\n          if (c === 62\n          /* > */\n          ) {\n              this._handleTagOpening(endTag, tagName, attrs);\n\n              tagName = undefined;\n              attrs = undefined;\n              endTag = undefined;\n              selfClosing = undefined;\n              state = STATE_TEXT;\n              recordStart = pos + 1;\n            } else if (c === 47\n          /* / */\n          ) {\n              selfClosing = true;\n            } else if (c > 32) {\n            recordStart = pos;\n            state = STATE_ATTR_NAME;\n          }\n\n          break;\n\n        case STATE_ATTR_NAME:\n          if (c <= 32 || c === 61\n          /* = */\n          ) {\n              attrName = endRecording();\n              pos--;\n              state = STATE_ATTR_EQ;\n            }\n\n          break;\n\n        case STATE_ATTR_EQ:\n          if (c === 61\n          /* = */\n          ) {\n              state = STATE_ATTR_QUOT;\n            }\n\n          break;\n\n        case STATE_ATTR_QUOT:\n          if (c === 34\n          /* \" */\n          || c === 39\n          /* ' */\n          ) {\n              attrQuote = c;\n              attrQuoteChar = c === 34 ? '\"' : \"'\";\n              state = STATE_ATTR_VALUE;\n              recordStart = pos + 1;\n            }\n\n          break;\n\n        case STATE_ATTR_VALUE:\n          if (c === attrQuote) {\n            var value = unescapeXML(endRecording());\n            attrs[attrName] = value;\n            attrName = undefined;\n            state = STATE_TAG;\n          }\n\n          break;\n      }\n    }\n\n    if (typeof recordStart === 'number' && recordStart <= data.length) {\n      remainder = data.slice(recordStart);\n      recordStart = 0;\n    }\n  };\n};\n\ninherits(SaxLtx, EventEmitter);\n\nSaxLtx.prototype.end = function (data) {\n  if (data) {\n    this.write(data);\n  }\n  /* Uh, yeah */\n\n\n  this.write = function () {};\n};","map":null,"metadata":{},"sourceType":"script"}