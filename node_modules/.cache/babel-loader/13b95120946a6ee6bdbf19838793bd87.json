{"ast":null,"code":"import _classCallCheck from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\src\\\\components\\\\loginPage.js\";\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nvar ConnectyCube = window.ConnectyCube;\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginPage, _React$Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props));\n\n    _this.setLocalStorage = function (user) {\n      localStorage.setItem('user', true);\n      localStorage['user'] = {\n        login: user.login,\n        password: user.password\n      };\n\n      _this.props.setAuthorization();\n    };\n\n    _this.loginUser = function () {\n      var user = {\n        login: _this.login.value,\n        password: _this.password.value\n      };\n\n      var cont = _assertThisInitialized(_assertThisInitialized(_this));\n\n      ConnectyCube.createSession(user, function (error, session) {\n        if (error) {\n          console.log(error);\n          cont.setState({\n            error: true\n          });\n        } else {\n          cont.setState({\n            error: false\n          });\n          cont.props.setSession(session);\n          cont.setLocalStorage(user);\n        }\n      });\n    };\n\n    _this.removeLocalStorage = function () {\n      localStorage.removeItem(\"user\");\n    };\n\n    _this.state = {\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.authorization) {\n        return React.createElement(\"div\", {\n          className: \"sign-up-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Login\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"sign-up-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"username\"), React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Login\",\n          ref: function ref(input) {\n            return _this2.login = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"sign-up-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"password\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: this.state.error ? \"wrongLogin\" : \"\",\n          placeholder: \"Password\",\n          ref: function ref(input) {\n            return _this2.password = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.loginUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Login\"), this.state.error && React.createElement(\"div\", {\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \" incorrect login or email\")), React.createElement(\"div\", {\n          className: \"block-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/register\",\n          className: \"btn-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Register\"))));\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return LoginPage;\n}(React.Component);\n\nexport default LoginPage;","map":{"version":3,"sources":["D:\\practics\\ConnectyCube\\test\\src\\components\\loginPage.js"],"names":["React","Link","Redirect","ConnectyCube","window","LoginPage","props","setLocalStorage","user","localStorage","setItem","login","password","setAuthorization","loginUser","value","cont","createSession","error","session","console","log","setState","setSession","removeLocalStorage","removeItem","state","authorization","input","pathname","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link , Redirect } from 'react-router-dom';\r\n\r\nconst ConnectyCube = window.ConnectyCube\r\n\r\nclass LoginPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          error: false\r\n      };\r\n    }\r\n    setLocalStorage = (user) =>{\r\n        localStorage.setItem('user', true)\r\n        localStorage['user'] = {login: user.login, password: user.password}\r\n        this.props.setAuthorization()\r\n    }\r\n    loginUser = () =>{\r\n        let user = {\r\n            login : this.login.value,\r\n            password: this.password.value,\r\n        }\r\n        let cont = this\r\n        ConnectyCube.createSession(user, function(error, session) {\r\n            if(error){\r\n              console.log(error)\r\n              cont.setState({\r\n                error: true\r\n              })\r\n            }else{\r\n              cont.setState({\r\n                error: false\r\n              })\r\n              cont.props.setSession(session)\r\n              cont.setLocalStorage(user)\r\n            }\r\n          });\r\n    }\r\n    removeLocalStorage = ()=>{\r\n        localStorage.removeItem(\"user\")\r\n        \r\n    }\r\n    render(){\r\n            if(!this.props.authorization){\r\n                return(\r\n                    <div className=\"sign-up-block\">\r\n                      <div className=\"form\">\r\n                        <h1>Login</h1>\r\n                        <div >\r\n                                <div className=\"sign-up-input\"><p>username</p><input type=\"text\"  placeholder=\"Login\" ref={(input)=>this.login = input}/></div>\r\n                                <div className=\"sign-up-input\">\r\n                                  <p>password</p>\r\n                                  <input type=\"text\" className={this.state.error ? \"wrongLogin\" : \"\"} placeholder=\"Password\" ref={(input)=>this.password = input}/>\r\n                                </div>\r\n                                <button onClick={this.loginUser}>Login</button>\r\n                                {this.state.error && \r\n                                <div className=\"error\"> incorrect login or email</div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"block-link\">\r\n                            <Link to=\"/register\" className=\"btn-link\">Register</Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                )\r\n            }else{\r\n               return(\r\n                    <Redirect to={{ pathname: '/' }}/>\r\n               )\r\n            }\r\n    }\r\n}\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}