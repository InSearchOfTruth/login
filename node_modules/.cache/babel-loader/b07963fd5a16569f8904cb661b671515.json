{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\src\\\\components\\\\privateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nexport var PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      loggedIn = _ref.authorization,\n      session = _ref.session,\n      resetSession = _ref.resetSession,\n      setAuthotization = _ref.setAuthotization,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"authorization\", \"session\", \"resetSession\", \"setAuthotization\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    path: \"/\",\n    render: function render(props) {\n      return loggedIn ? React.createElement(Component, Object.assign({}, props, {\n        session: session,\n        resetSession: resetSession,\n        setAuthotization: setAuthotization,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["D:\\practics\\ConnectyCube\\test\\src\\components\\privateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","Component","component","loggedIn","authorization","session","resetSession","setAuthotization","rest","props","pathname"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAwCC,QAAxC,QAAyBC,aAAzB;AAAA,MAA2DC,OAA3D,QAAkDA,OAAlD;AAAA,MAAkFC,YAAlF,QAAoEA,YAApE;AAAA,MAAgHC,gBAAhH,QAA+FA,gBAA/F;AAAA,MAAsIC,IAAtI;;AAAA,SAExB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,IAAI,EAAC,GAAtB;AAA0B,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAEnCN,QAAQ,GACF,oBAAC,SAAD,oBAAeM,KAAf;AAAsB,QAAA,OAAO,EAAEJ,OAA/B;AAAwC,QAAA,YAAY,EAAEC,YAAtD;AAAoE,QAAA,gBAAgB,EAAEC,gBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADE,GAEF,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJ6B;AAAA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFwB;AAAA,CAArB","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, authorization: loggedIn, session: session, resetSession: resetSession,setAuthotization:setAuthotization,  ...rest }) => (\r\n    \r\n    <Route {...rest} path=\"/\" render={props => (\r\n        \r\n        loggedIn\r\n            ? <Component {...props} session={session} resetSession={resetSession} setAuthotization={setAuthotization}/>\r\n            : <Redirect to={{ pathname: '/login' }} />\r\n    )} />\r\n    \r\n)"]},"metadata":{},"sourceType":"module"}