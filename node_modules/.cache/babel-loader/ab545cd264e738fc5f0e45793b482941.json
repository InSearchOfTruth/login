{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar xml = require('@xmpp/xml');\n/*\n * References\n * https://xmpp.org/rfcs/rfc6120.html#bind\n */\n\n\nvar NS = 'urn:ietf:params:xml:ns:xmpp-bind';\n\nfunction makeBindElement(resource) {\n  return xml('bind', {\n    xmlns: NS\n  }, resource && xml('resource', {}, resource));\n}\n\nfunction bind(entity, iqCaller, resource) {\n  return iqCaller.set(makeBindElement(resource)).then(function (result) {\n    var jid = result.getChildText('jid');\n\n    entity._jid(jid);\n\n    return jid;\n  });\n}\n\nfunction route(_ref, resource) {\n  var iqCaller = _ref.iqCaller;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2, next) {\n        var entity;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                entity = _ref2.entity;\n\n                if (!(typeof resource === 'function')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return resource(function (resource) {\n                  return bind(entity, iqCaller, resource);\n                });\n\n              case 4:\n                _context.next = 8;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return bind(entity, iqCaller, resource);\n\n              case 8:\n                next();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nmodule.exports = function (_ref4, resource) {\n  var streamFeatures = _ref4.streamFeatures,\n      iqCaller = _ref4.iqCaller;\n  streamFeatures.use('bind', NS, route({\n    iqCaller: iqCaller\n  }, resource));\n};","map":null,"metadata":{},"sourceType":"script"}