{"ast":null,"code":"import _classCallCheck from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\src\\\\components\\\\loginPage.js\";\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nvar ConnectyCube = window.ConnectyCube;\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginPage, _React$Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props));\n\n    _this.setLocalStorage = function () {\n      localStorage.setItem('user', true);\n\n      _this.props.isAuthorized();\n    };\n\n    _this.loginUser = function () {\n      var user = {\n        login: _this.login.value,\n        password: _this.password.value,\n        full_name: _this.name.value\n      };\n\n      var cont = _assertThisInitialized(_assertThisInitialized(_this));\n\n      ConnectyCube.createSession(user, function (error, session) {\n        if (error) {\n          cont.setState({\n            error: true\n          });\n        } else {\n          cont.setState({\n            error: false\n          });\n        }\n      });\n    };\n\n    _this.removeLocalStorage = function () {\n      localStorage.removeItem(\"user\");\n    };\n\n    _this.state = {\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.authorized) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"login\", React.createElement(\"div\", {\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Login\",\n          ref: function ref(input) {\n            return _this2.login = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          ref: function ref(input) {\n            return _this2.password = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.loginUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"btn\"), this.state.error && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \" incorrect login or email\")), React.createElement(Link, {\n          to: \"/register\",\n          className: \"btn btn-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Register\"));\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return LoginPage;\n}(React.Component);\n\nexport default LoginPage;","map":{"version":3,"sources":["D:\\practics\\ConnectyCube\\test\\src\\components\\loginPage.js"],"names":["React","Link","Redirect","ConnectyCube","window","LoginPage","props","setLocalStorage","localStorage","setItem","isAuthorized","loginUser","user","login","value","password","full_name","name","cont","createSession","error","session","setState","removeLocalStorage","removeItem","state","authorized","input","pathname","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,IAAMC,YAAY,GAAGC,MAAM,CAACD,YAA5B;;IAEME,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAOnBC,eAPmB,GAOD,YAAK;AACnBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,IAA7B;;AACA,YAAKH,KAAL,CAAWI,YAAX;AACH,KAVkB;;AAAA,UAWnBC,SAXmB,GAWP,YAAK;AACb,UAAIC,IAAI,GAAG;AACPC,QAAAA,KAAK,EAAG,MAAKA,KAAL,CAAWC,KADZ;AAEPC,QAAAA,QAAQ,EAAE,MAAKA,QAAL,CAAcD,KAFjB;AAGPE,QAAAA,SAAS,EAAE,MAAKC,IAAL,CAAUH;AAHd,OAAX;;AAKA,UAAII,IAAI,wDAAR;;AACAf,MAAAA,YAAY,CAACgB,aAAb,CAA2BP,IAA3B,EAAiC,UAASQ,KAAT,EAAgBC,OAAhB,EAAyB;AACtD,YAAGD,KAAH,EAAS;AACPF,UAAAA,IAAI,CAACI,QAAL,CAAc;AACZF,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD,SAJD,MAIK;AACHF,UAAAA,IAAI,CAACI,QAAL,CAAc;AACZF,YAAAA,KAAK,EAAE;AADK,WAAd;AAID;AACF,OAXH;AAYH,KA9BkB;;AAAA,UA+BnBG,kBA/BmB,GA+BE,YAAI;AACrBf,MAAAA,YAAY,CAACgB,UAAb,CAAwB,MAAxB;AAEH,KAlCkB;;AAGf,UAAKC,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE;AADI,KAAb;AAHe;AAMlB;;;;6BA6BO;AAAA;;AACA,UAAG,CAAC,KAAKd,KAAL,CAAWoB,UAAf,EAA0B;AACtB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,GAAG,EAAE,aAACC,KAAD;AAAA,mBAAS,MAAI,CAACd,KAAL,GAAac,KAAtB;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR,EAEQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,UAA/B;AAA0C,UAAA,GAAG,EAAE,aAACA,KAAD;AAAA,mBAAS,MAAI,CAACZ,QAAL,GAAgBY,KAAzB;AAAA,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR,EAGQ;AAAQ,UAAA,OAAO,EAAE,KAAKhB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHR,EAIS,KAAKc,KAAL,CAAWL,KAAX,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCALR,CADJ,EASI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAqB,UAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CADJ;AAaH,OAdD,MAcK;AACF,eACK,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEQ,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAGF;AACR;;;;EAxDmB5B,KAAK,CAAC6B,S;;AA0D9B,eAAexB,SAAf","sourcesContent":["import React from 'react';\r\nimport { Link , Redirect } from 'react-router-dom';\r\n\r\nconst ConnectyCube = window.ConnectyCube\r\n\r\nclass LoginPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          error: false\r\n      };\r\n    }\r\n    setLocalStorage = () =>{\r\n        localStorage.setItem('user', true)\r\n        this.props.isAuthorized()\r\n    }\r\n    loginUser = () =>{\r\n        let user = {\r\n            login : this.login.value,\r\n            password: this.password.value,\r\n            full_name: this.name.value\r\n        }\r\n        let cont = this\r\n        ConnectyCube.createSession(user, function(error, session) {\r\n            if(error){\r\n              cont.setState({\r\n                error: true\r\n              })\r\n            }else{\r\n              cont.setState({\r\n                error: false\r\n              })\r\n\r\n            }\r\n          });\r\n    }\r\n    removeLocalStorage = ()=>{\r\n        localStorage.removeItem(\"user\")\r\n        \r\n    }\r\n    render(){\r\n            if(!this.props.authorized){\r\n                return(\r\n                    <div>login\r\n                        <div className=\"form\">\r\n                                <input type=\"text\" placeholder=\"Login\" ref={(input)=>this.login = input}/>\r\n                                <input type=\"text\" placeholder=\"Password\" ref={(input)=>this.password = input}/>\r\n                                <button onClick={this.loginUser}>btn</button>\r\n                                {this.state.error && \r\n                                <div> incorrect login or email</div>\r\n                            }\r\n                        </div>\r\n                        <Link to=\"/register\" className=\"btn btn-link\">Register</Link>\r\n                    </div>\r\n                )\r\n            }else{\r\n               return(\r\n                    <Redirect to={{ pathname: '/' }}/>\r\n               )\r\n            }\r\n    }\r\n}\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}