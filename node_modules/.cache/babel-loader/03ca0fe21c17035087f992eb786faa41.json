{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar xml = require('@xmpp/xml'); // https://tools.ietf.org/html/draft-cridland-xmpp-session-01\n\n\nvar NS = 'urn:ietf:params:xml:ns:xmpp-session';\n\nmodule.exports = function (_ref) {\n  var iqCaller = _ref.iqCaller,\n      streamFeatures = _ref.streamFeatures;\n  streamFeatures.use('session', NS,\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(context, next, feature) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!feature.getChild('optional')) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 2:\n              _context.next = 4;\n              return iqCaller.set(xml('session', NS));\n\n            case 4:\n              return _context.abrupt(\"return\", next());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n};","map":null,"metadata":{},"sourceType":"script"}