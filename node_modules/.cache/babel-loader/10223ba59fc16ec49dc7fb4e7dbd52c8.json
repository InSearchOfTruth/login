{"ast":null,"code":"'use strict';\n\nmodule.exports = function promise(EE, event) {\n  var rejectEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'error';\n  return new Promise(function (resolve, reject) {\n    var cleanup = function cleanup() {\n      EE.removeListener(event, onEvent);\n      EE.removeListener(rejectEvent, onError);\n    };\n\n    function onError(reason) {\n      reject(reason);\n      cleanup();\n    }\n\n    function onEvent(value) {\n      resolve(value);\n      cleanup();\n    }\n\n    EE.once(event, onEvent);\n\n    if (rejectEvent) {\n      EE.once(rejectEvent, onError);\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"script"}