{"ast":null,"code":"'use strict';\n\nvar config = require('../cubeConfig');\n\nvar Utils = require('../cubeInternalUtils');\n\nvar WebRTCHelpers = {};\nWebRTCHelpers = {\n  getUserJid: function getUserJid(id, appId) {\n    return id + '-' + appId + '@' + config.endpoints.chat;\n  },\n  getIdFromNode: function getIdFromNode(jid) {\n    if (jid.indexOf('@') < 0) return null;\n    return parseInt(jid.split('@')[0].split('-')[0]);\n  },\n  userCurrentJid: function userCurrentJid(client) {\n    if (Utils.getEnv().browser) {\n      return client.jid;\n    } else if (Utils.getEnv().reactnative) {\n      return client.jid._local + '@' + client.jid._domain + '/' + client.jid._resource;\n    } else {\n      // Node.js & Native Script\n      return client.jid.user + '@' + client.jid._domain + '/' + client.jid._resource;\n    }\n  },\n  trace: function trace(text) {\n    if (config.debug) {\n      console.log('[VideoChat]:', text);\n    }\n  },\n  traceWarning: function traceWarning(text) {\n    if (config.debug) {\n      console.warn('[VideoChat]:', text);\n    }\n  },\n  traceError: function traceError(text) {\n    if (config.debug) {\n      console.error('[VideoChat]:', text);\n    }\n  },\n  // Convert Data URI to Blob\n  dataURItoBlob: function dataURItoBlob(dataURI, contentType) {\n    var arr = [],\n        binary = window.atob(dataURI.split(',')[1]);\n\n    for (var i = 0, len = binary.length; i < len; i++) {\n      arr.push(binary.charCodeAt(i));\n    }\n\n    return new Blob([new Uint8Array(arr)], {\n      type: contentType\n    });\n  },\n\n  /**\n   * It's functions to fixed issue\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=1377434\n   */\n  getVersionFirefox: function getVersionFirefox() {\n    var ua = navigator ? navigator.userAgent : false;\n    var version;\n\n    if (ua) {\n      var ffInfo = ua.match(/(?:firefox)[ \\/](\\d+)/i) || [];\n      version = ffInfo[1] ? +ffInfo[1] : null;\n    }\n\n    return version;\n  },\n  getVersionSafari: function getVersionSafari() {\n    var ua = navigator ? navigator.userAgent : false;\n    var version;\n\n    if (ua) {\n      var sInfo = ua.match(/(?:safari)[ \\/](\\d+)/i) || [];\n\n      if (sInfo.length) {\n        var sVer = ua.match(/(?:version)[ \\/](\\d+)/i) || [];\n\n        if (sVer) {\n          version = sVer[1] ? +sVer[1] : null;\n        } else {\n          version = null;\n        }\n      } else {\n        version = null;\n      }\n    }\n\n    return version;\n  }\n};\n/**\n * [SessionConnectionState]\n * @type {Object}\n */\n\nWebRTCHelpers.SessionConnectionState = {\n  UNDEFINED: 0,\n  CONNECTING: 1,\n  CONNECTED: 2,\n  FAILED: 3,\n  DISCONNECTED: 4,\n  CLOSED: 5,\n  COMPLETED: 6\n};\n/**\n * [CallType]\n * @type {Object}\n */\n\nWebRTCHelpers.CallType = {\n  VIDEO: 1,\n  AUDIO: 2\n};\nmodule.exports = WebRTCHelpers;","map":null,"metadata":{},"sourceType":"script"}