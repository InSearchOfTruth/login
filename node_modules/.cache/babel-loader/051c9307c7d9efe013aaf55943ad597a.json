{"ast":null,"code":"'use strict';\n\nvar compose = require('koa-compose');\n\nvar IncomingContext = require('./lib/IncomingContext');\n\nvar OutgoingContext = require('./lib/OutgoingContext');\n\nfunction listener(entity, middleware, Context) {\n  return function (stanza) {\n    var ctx = new Context(entity, stanza);\n    return compose(middleware)(ctx);\n  };\n}\n\nfunction errorHandler(entity) {\n  return function (ctx, next) {\n    next().then(function (reply) {\n      return reply && entity.send(reply);\n    }).catch(function (err) {\n      return entity.emit('error', err);\n    });\n  };\n}\n\nmodule.exports = function (_ref) {\n  var entity = _ref.entity;\n  var incoming = [errorHandler(entity)];\n  var outgoing = [];\n  var incomingListener = listener(entity, incoming, IncomingContext);\n  var outgoingListener = listener(entity, outgoing, OutgoingContext);\n  entity.on('element', incomingListener);\n  entity.hookOutgoing = outgoingListener;\n  return {\n    use: function use(fn) {\n      incoming.push(fn);\n      return fn;\n    },\n    filter: function filter(fn) {\n      outgoing.push(fn);\n      return fn;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}