{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nmodule.exports = function route() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref, next) {\n        var stanza, entity;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                stanza = _ref.stanza, entity = _ref.entity;\n\n                if (stanza.is('features', 'http://etherx.jabber.org/streams')) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", next());\n\n              case 3:\n                _context.next = 5;\n                return next();\n\n              case 5:\n                if (entity.jid) entity._status('online', entity.jid);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":null,"metadata":{},"sourceType":"script"}