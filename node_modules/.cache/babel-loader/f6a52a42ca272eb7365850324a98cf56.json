{"ast":null,"code":"import _classCallCheck from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\practics\\\\ConnectyCube\\\\test\\\\src\\\\components\\\\registerPage.js\";\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nvar ConnectyCube = window.ConnectyCube;\n\nvar RegisterPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegisterPage, _React$Component);\n\n  function RegisterPage(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterPage).call(this, props));\n\n    _this.registerNewUser = function () {\n      var user = {\n        login: _this.login.value,\n        password: _this.password.value,\n        full_name: _this.name.value\n      };\n\n      var cont = _assertThisInitialized(_assertThisInitialized(_this));\n\n      ConnectyCube.users.signup(user, function (error, user) {\n        if (error) {\n          console.log(error);\n          cont.setState({\n            error: true\n          });\n        } else {\n          cont.setState({\n            error: false,\n            registered: true\n          });\n          setTimeout(function () {\n            React.createElement(Redirect, {\n              to: {\n                pathname: '/login'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            });\n          }, 2000);\n        }\n      });\n    };\n\n    _this.state = {\n      registered: false,\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(RegisterPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!localStorage.getItem('user')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"registration\", React.createElement(\"div\", {\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Login\",\n          ref: function ref(input) {\n            return _this2.login = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          ref: function ref(input) {\n            return _this2.password = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          ref: function ref(input) {\n            return _this2.name = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.registerNewUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"btn\")), this.state.error && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \" incorrect data\"), this.state.registered && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \" Successful registration\")), React.createElement(Link, {\n          to: \"/login\",\n          className: \"btn btn-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"login\"));\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return RegisterPage;\n}(React.Component);\n\nexport default RegisterPage;","map":{"version":3,"sources":["D:\\practics\\ConnectyCube\\test\\src\\components\\registerPage.js"],"names":["React","Link","Redirect","ConnectyCube","window","RegisterPage","props","registerNewUser","user","login","value","password","full_name","name","cont","users","signup","error","console","log","setState","registered","setTimeout","pathname","state","localStorage","getItem","input","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link , Redirect } from 'react-router-dom';\r\n\r\nconst ConnectyCube = window.ConnectyCube\r\n\r\nclass RegisterPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          registered: false,\r\n          error: false\r\n      };\r\n    }\r\n    registerNewUser = () =>{\r\n        let user = {\r\n            login : this.login.value,\r\n            password: this.password.value,\r\n            full_name: this.name.value\r\n        }\r\n        let cont = this\r\n        ConnectyCube.users.signup(user, function(error, user){\r\n            if(error){\r\n                console.log(error)\r\n              cont.setState({\r\n                  error: true\r\n              })\r\n            }else{\r\n\r\n                cont.setState({\r\n                    error: false,\r\n                    registered: true\r\n              })\r\n              \r\n              setTimeout(() => {\r\n                        <Redirect to={{ pathname: '/login' }}/>\r\n                    }, 2000)\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        if(!localStorage.getItem('user')){\r\n            return(\r\n                <div>registration\r\n                    <div className=\"form\">\r\n                        <div><input type=\"text\" placeholder=\"Login\" ref={(input)=>this.login = input}/></div>\r\n                            \r\n                        <div><input type=\"text\" placeholder=\"Password\" ref={(input)=>this.password = input}/></div>\r\n                            \r\n                        <div><input type=\"text\" placeholder=\"Name\" ref={(input)=>this.name = input}/></div>\r\n                            \r\n                        <div><button onClick={this.registerNewUser}>btn</button></div>\r\n                            \r\n                            {this.state.error && \r\n                                <div> incorrect data</div>\r\n                            }\r\n                            {this.state.registered && \r\n                                <div> Successful registration</div>\r\n                            }\r\n                    </div>\r\n                    <Link to=\"/login\" className=\"btn btn-link\">login</Link>\r\n                </div>\r\n            )\r\n        }else{\r\n           return(\r\n                <Redirect to={{ pathname: '/' }}/>\r\n           )\r\n        }\r\n    }\r\n}\r\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}