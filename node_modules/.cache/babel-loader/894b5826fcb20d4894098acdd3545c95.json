{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"D:\\\\practics\\\\ConnectyCube\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _Element = require('ltx/lib/Element');\n\nvar Element =\n/*#__PURE__*/\nfunction (_Element2) {\n  _inherits(Element, _Element2);\n\n  function Element() {\n    _classCallCheck(this, Element);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Element).apply(this, arguments));\n  }\n\n  _createClass(Element, [{\n    key: \"setAttrs\",\n    value: function setAttrs(attrs) {\n      if (typeof attrs === 'string') {\n        this.attrs.xmlns = attrs;\n      } else if (attrs) {\n        Object.keys(attrs).forEach(function (key) {\n          var val = attrs[key];\n          if (val !== undefined && val !== null) this.attrs[key.toString()] = val.toString();\n        }, this);\n      }\n    }\n  }, {\n    key: \"append\",\n    value: function append(nodes) {\n      var _this = this;\n\n      nodes = Array.isArray(nodes) ? nodes : [nodes];\n      nodes.forEach(function (node) {\n        _this.children.push(node);\n\n        if (typeof node === 'object') {\n          node.parent = _this;\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"prepend\",\n    value: function prepend(nodes) {\n      var _this2 = this;\n\n      nodes = Array.isArray(nodes) ? nodes : [nodes];\n      nodes.forEach(function (node) {\n        _this2.children.unshift(node);\n\n        if (typeof node === 'object') {\n          node.parent = _this2;\n        }\n      });\n      return this;\n    }\n  }]);\n\n  return Element;\n}(_Element);\n\nmodule.exports = Element;","map":null,"metadata":{},"sourceType":"script"}